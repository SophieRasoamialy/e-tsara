name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.10.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Backend dependencies
      - name: Install Backend Dependencies
        run: npm ci
        working-directory: ./autograder-backend

      # Frontend dependencies
      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./autograder-frontend

      # Build Docker images
      - name: Build Docker images
        run: |
          docker-compose build
          docker tag autograder-backend:latest hasindrae/autograder-backend:latest
          docker tag autograder-frontend:latest hasindrae/autograder-frontend:latest

      - name: Verify Docker images
        run: docker images

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Push Backend to Docker Hub  
      - name: Push Backend to Docker Hub
        run: docker push hasindrae/autograder-backend:latest

      # Push Frontend to Docker Hub  
      - name: Push Frontend to Docker Hub
        run: docker push hasindrae/autograder-frontend:latest
        

      - name: Install AWS CLI
        run: |
            sudo apt-get update
            sudo apt-get install -y unzip
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install --update

      # VÃ©rifier l'installation
      - name: Verify AWS CLI installation
        run: aws --version

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1 

      - name: Install eksctl
        run: |
          curl --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s | tr '[:upper:]' '[:lower:]')_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name autograder

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Check Pods Status
        run: kubectl get pods

      - name: Get logs for debugging
        if: failure()
        run: kubectl logs -l app=autograder-backend
